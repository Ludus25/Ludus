
services:

  rabbitmq:
    image: rabbitmq:3-management-alpine

  gamehistoryservicedb:
    image: postgres

  pgadmin:
    image: dpage/pgadmin4
      
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest

  xogamedb:
    image: redis:alpine
    container_name: xogamedb
    restart: always
    ports:
      - "6379:6379"

  xogameservice.api:
    image: ${DOCKER_REGISTRY-}xogameserviceapi
    container_name: xogame.api
    build:
      context: .
      dockerfile: Services/XOGameService/XOGameService.API/Dockerfile

  gamehistoryservice:
    image: ${DOCKER_REGISTRY-}gamehistoryservice
    build:
      context: .
      dockerfile: Services/GameHistoryService/Dockerfile

volumes:
  postgres_data:
  pgadmin_data:
  rabbitmq_data:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      - xogamedb
    ports:
      - "8001:8080"

  authenticationservice:
    image: authenticationservice
    container_name: ludus-authenticationservice
    build:
      context: Services/AuthenticationService/AuthenticationService
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=Ludus;User Id=sa;Password=LudusBaza123!;TrustServerCertificate=True;
    depends_on:
      sqlserver:
        condition: service_healthy
    ports:
      - "7000:8080"
  
  ludusgateways:
    image: ${DOCKER_REGISTRY-}ludusgateways
    build:
      context: .
      dockerfile: Services/ApiGateways/SPAGateways/Dockerfile


  matchmakingservice:
    image: ${DOCKER_REGISTRY-}matchmakingservice
    build:
      context: .
      dockerfile: Services/matchmaking/MatchmakingService/Dockerfile

volumes:
  mssql_data:



